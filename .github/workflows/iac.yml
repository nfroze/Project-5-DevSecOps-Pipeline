name: IaC Security Scan

permissions:
  contents: read

on:
  push:
    branches: [main]
    paths:
      - '**/*.tf'
  pull_request:
    branches: [main]
    paths:
      - '**/*.tf'

jobs:
  iac-security:
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4

      - name: üîí Install Checkov
        run: pip install checkov

      - name: üîç Run Checkov and generate JSON report
        run: |
          checkov -d . --skip-path .terraform --output json --output-file-path checkov-report.json
        continue-on-error: true

      - name: üì§ Upload Checkov JSON report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkov-report
          path: checkov-report.json

      - name: üì° Send Checkov results to Splunk
        if: always()
        env:
          SPLUNK_HEC_URL: ${{ secrets.SPLUNK_HEC_URL }}
          SPLUNK_HEC_TOKEN: ${{ secrets.SPLUNK_HEC_TOKEN }}
        run: |
          if [ -f checkov-report.json ]; then
            CHANNEL_ID=$(uuidgen)
            curl -k "$SPLUNK_HEC_URL" \
              -H "Authorization: Splunk $SPLUNK_HEC_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"event\": $(cat checkov-report.json), \"sourcetype\": \"checkov\", \"channel\": \"$CHANNEL_ID\"}"
          fi

      - name: ‚ùå Fail if Checkov found policy violations
        run: |
          if jq '.results.failed_checks | length > 0' checkov-report.json | grep true; then
            echo "‚ùå Checkov found policy violations"
            exit 1
          fi