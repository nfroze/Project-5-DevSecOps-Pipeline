name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region eu-west-2 --name project5-eks-cluster

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Wait for LoadBalancer External IP
        id: wait_lb
        run: |
          for i in {1..30}; do
            EXTERNAL_IP=$(kubectl get svc devsecops-service -o=jsonpath='{.status.loadBalancer.ingress[0].hostname}')
            if [[ -n "$EXTERNAL_IP" ]]; then
              echo "External IP acquired: $EXTERNAL_IP"
              echo "EXTERNAL_IP=$EXTERNAL_IP" >> $GITHUB_ENV
              break
            else
              echo "Waiting for LoadBalancer IP..."
              sleep 10
            fi
          done

      - name: Run OWASP ZAP Baseline DAST Scan
        run: |
          docker pull ghcr.io/zaproxy/zaproxy
          docker run --rm \
            --user $(id -u):$(id -g) \
            -v $(pwd):/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy zap-baseline.py \
            -t http://${{ env.EXTERNAL_IP }} \
            -r zap-report.html \
            -w zap-output.md \
            -J zap-report.json || true

      - name: Upload ZAP DAST Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-dast-reports
          path: |
            zap-report.html
            zap-output.md
            zap-report.json