name: Deploy and ZAP Scan

permissions:
  contents: read

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types:
      - completed

jobs:
  deploy-and-scan:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: nfroze/project5-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Image Tag Artifact
        uses: actions/download-artifact@v4
        with:
          name: image-tag

      - name: Read Image Tag
        id: read_tag
        run: |
          IMAGE_TAG=$(cat image-tag.txt)
          echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_ENV"

      - name: Deploy to EKS
        run: |
          aws eks --region eu-west-2 update-kubeconfig --name project5-cluster
          kubectl set image deployment/project5-app project5-app=$IMAGE_NAME:$IMAGE_TAG

      - name: Wait for deployment to be ready
        run: |
          kubectl rollout status deployment/project5-app

      - name: ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: http://a1fc376fb666a42afa11820972d153a1-528790283.eu-west-2.elb.amazonaws.com/
          cmd_options: '-a'
        continue-on-error: true

      - name: Upload ZAP Report (Markdown)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: report.md

      - name: Send ZAP Report to Splunk (as text blob)
        if: always()
        env:
          SPLUNK_HEC_URL: ${{ secrets.SPLUNK_HEC_URL }}
          SPLUNK_HEC_TOKEN: ${{ secrets.SPLUNK_HEC_TOKEN }}
        run: |
          if [ -f report.md ]; then
            ESCAPED=$(jq -Rs '.' < report.md)
            curl -k "$SPLUNK_HEC_URL" \
              -H "Authorization: Splunk $SPLUNK_HEC_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"event\": $ESCAPED, \"sourcetype\": \"zap-report-md\", \"channel\": \"$(uuidgen)\"}"
          fi