name: CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region eu-west-2 --name project5-eks-cluster

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Wait for LoadBalancer External IP
        run: |
          for i in {1..60}; do
            EXTERNAL_IP=$(kubectl get svc devsecops-service -n default -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
            if [ -n "$EXTERNAL_IP" ]; then
              echo "Service is available at: http://$EXTERNAL_IP"
              break
            fi
            echo "Waiting for LoadBalancer IP..."
            sleep 10
          done

      - name: Run OWASP ZAP Baseline DAST Scan and save report
        run: |
          mkdir -p zap-results
          docker run --user root -v $(pwd)/zap-results:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://$EXTERNAL_IP \
            -r zap-report.html \
            -J zap-report.json || true

      - name: Upload ZAP DAST Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-dast-reports
          path: ./zap-results

      - name: Send ZAP DAST JSON report to Splunk
        run: |
          if [ -f zap-results/zap-report.json ]; then
            CHANNEL_ID=$(uuidgen)
            curl -k https://prd-p-44h4s.splunkcloud.com:8088/services/collector \
              -H "Authorization: Splunk ${{ secrets.SPLUNK_HEC_TOKEN }}" \
              -H "Content-Type: application/json" \
              -H "X-Splunk-Request-Channel: $CHANNEL_ID" \
              -d @zap-results/zap-report.json
          else
            echo "ZAP report JSON not found, skipping Splunk upload."
          fi

      - name: ðŸ“¡ Send CD final result to Splunk
        run: |
          CHANNEL_ID=$(uuidgen)
          curl -k https://prd-p-44h4s.splunkcloud.com:8088/services/collector \
            -H "Authorization: Splunk ${{ secrets.SPLUNK_HEC_TOKEN }}" \
            -H "Content-Type: application/json" \
            -H "X-Splunk-Request-Channel: $CHANNEL_ID" \
            -d "{\"event\": \"CD pipeline ${{ github.workflow }} on branch ${{ github.ref_name }} (run #${{ github.run_number }}) completed\"}"