name: üöÄ CD Pipeline

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v3

      - name: üîê Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: ‚öôÔ∏è Update kubeconfig
        run: aws eks update-kubeconfig --region eu-west-2 --name project5-eks-cluster

      - name: üì¶ Deploy to EKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: ‚è≥ Wait for LoadBalancer external IP
        run: |
          for i in {1..60}; do
            EXTERNAL_IP=$(kubectl get svc devsecops-service -n default -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
            if [ -n "$EXTERNAL_IP" ]; then
              echo "‚úÖ External IP: http://$EXTERNAL_IP"
              break
            fi
            echo "Waiting for LoadBalancer IP..."
            sleep 10
          done

      - name: üõ°Ô∏è Run OWASP ZAP Baseline DAST Scan and save report (fail on warn)
        continue-on-error: true
        run: |
          mkdir -p zap-results
          docker run --user root -v $(pwd)/zap-results:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://$EXTERNAL_IP \
            -r zap-report.html \
            -J zap-report.json \
            --fail-on-warn

      - name: üì§ Upload ZAP DAST Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-dast-reports
          path: ./zap-results

      - name: üì° Send ZAP DAST JSON report to Splunk
        if: always()
        run: |
          if [ -f zap-results/zap-report.json ]; then
            CHANNEL_ID=$(uuidgen)
            RESULTS=$(jq -c . zap-results/zap-report.json)
            curl -k https://prd-p-44h4s.splunkcloud.com:8088/services/collector \
              -H "Authorization: Splunk ${{ secrets.SPLUNK_HEC_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d "{\"event\": $RESULTS, \"sourcetype\": \"zap\", \"channel\": \"$CHANNEL_ID\"}"
          else
            echo "‚ö†Ô∏è ZAP report JSON not found, skipping Splunk upload."
          fi

      - name: ‚ùå Fail if ZAP found vulnerabilities
        run: |
          echo "Checking ZAP exit code..."
          docker run --rm \
            -v $(pwd)/zap-results:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://$EXTERNAL_IP \
            --fail-on-warn \
            --auto \
            --json || exit 1