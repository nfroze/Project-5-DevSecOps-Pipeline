name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Build"]
    types:
      - completed

jobs:
  deploy-and-scan:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set image tag
        run: echo "IMAGE_TAG=${{ github.sha }}" >> "$GITHUB_ENV" # nosemgrep

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --region eu-west-2 --name project5-eks-cluster

      - name: Create project5 namespace
        run: kubectl apply -f k8s/namespace.yaml

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Scan running container in EKS (by image)
        run: |
          IMAGE_ID="nfroze/project5-app:${{ env.IMAGE_TAG }}"
          trivy image --format json --output trivy-deploy-report.json $IMAGE_ID
        continue-on-error: true

      - name: Upload Trivy JSON Report (CD)
        uses: actions/upload-artifact@v4
        with:
          name: trivy-deploy-report
          path: trivy-deploy-report.json

      - name: Send Report to Splunk
        if: always()
        env:
          SPLUNK_HEC_URL: ${{ secrets.SPLUNK_HEC_URL }}
          SPLUNK_HEC_TOKEN: ${{ secrets.SPLUNK_HEC_TOKEN }}
        run: |
          if [ -f trivy-deploy-report.json ]; then
            curl -k "$SPLUNK_HEC_URL" \
              -H "Authorization: Splunk $SPLUNK_HEC_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"event\": $(cat trivy-deploy-report.json), \"sourcetype\": \"trivy-deploy\", \"channel\": \"cd-${GITHUB_RUN_ID}\"}"
          fi